name: GMO API Data Pipeline

on:
  workflow_dispatch:  # 手動実行のみ

concurrency:
  group: gmo-data-pipeline
  cancel-in-progress: true

jobs:
  run_pipeline:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      DISCORD_FOREX_MAIN: ${{ secrets.DISCORD_FOREX_MAIN }}
      DISCORD_FOREX_OTHER: ${{ secrets.DISCORD_FOREX_OTHER }}
      DISCORD_CRYPTO_MAIN: ${{ secrets.DISCORD_CRYPTO_MAIN }}
      DISCORD_CRYPTO_OTHER: ${{ secrets.DISCORD_CRYPTO_OTHER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests openai beautifulsoup4 feedparser

      - name: Run pipeline for each symbol
        run: |
          weekday_jst=$(TZ=Asia/Tokyo date +%u)
          hour_jst=$(TZ=Asia/Tokyo date +%H)

          # ヘッダ行を除いて1行ずつ処理
          tail -n +2 symbols.csv | while IFS=',' read -r symbol type; do
            echo "=== Processing $symbol ($type) ==="

            # === FXは週末スキップ ===
            if [ "$type" = "forex" ] && [[ "$weekday_jst" -gt 5 ]]; then
              echo "Skipping $symbol (FX weekend)"
              continue
            fi

            # === symbol_target.csv 作成 ===
            echo "symbol,type" > symbol_target.csv
            echo "$symbol,$type" >> symbol_target.csv

            # === 各処理 ===
            python fetch_gmo_ohlcv.py symbol_target.csv
            python ohlcv_calc.py symbol_target.csv
            python prepare_features.py symbol_target.csv

            # === AI分析 & 通知 ===
            ai_input_file="${symbol}_ai_input.json"
            latest_rates_file="${symbol}_latest_rates.csv"

            if [ -f "$ai_input_file" ] && [ -f "$latest_rates_file" ]; then
              python notify_discord_all.py \
                --ai_input_file "$ai_input_file" \
                --latest_rates_file "$latest_rates_file" \
                --symbol "$symbol" \
                --asset_type "$type" \
                --model gpt-5-mini
            else
              echo "Missing files for $symbol"
            fi

            echo "=== Finished $symbol ==="
            echo
          done

          # === 朝7時台ニュース通知 ===
          if [[ "$hour_jst" -eq 7 ]]; then
            echo "🕖 JST 7時台 → 為替ニュース通知を実行"
            #python forex_news_notify.py --symbols_file symbols.csv --model gpt-5-mini
          fi
