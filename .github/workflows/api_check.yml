name: GMO API Data Pipeline

on:
  schedule:
    # JST 7:00〜23:00 = UTC 22:00〜14:00
    - cron: "0 22 * * *"  # JST 7:00
    - cron: "0 23 * * *"  # JST 8:00
    - cron: "0 0 * * *"   # JST 9:00
    - cron: "0 1 * * *"   # JST 10:00
    - cron: "0 2 * * *"   # JST 11:00
    - cron: "0 3 * * *"   # JST 12:00
    - cron: "0 4 * * *"   # JST 13:00
    - cron: "0 5 * * *"   # JST 14:00
    - cron: "0 6 * * *"   # JST 15:00
    - cron: "0 7 * * *"   # JST 16:00
    - cron: "0 8 * * *"   # JST 17:00
    - cron: "0 9 * * *"   # JST 18:00
    - cron: "0 10 * * *"  # JST 19:00
    - cron: "0 11 * * *"  # JST 20:00
    - cron: "0 12 * * *"  # JST 21:00
    - cron: "0 13 * * *"  # JST 22:00
    - cron: "0 14 * * *"  # JST 23:00

  workflow_dispatch:

jobs:
  run_pipeline:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      DISCORD_FOREX_MAIN: ${{ secrets.DISCORD_FOREX_MAIN }}
      DISCORD_FOREX_OTHER: ${{ secrets.DISCORD_FOREX_OTHER }}
      DISCORD_CRYPTO_MAIN: ${{ secrets.DISCORD_CRYPTO_MAIN }}
      DISCORD_CRYPTO_OTHER: ${{ secrets.DISCORD_CRYPTO_OTHER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests openai

      - name: Fetch OHLCV data
        run: python fetch_gmo_ohlcv.py symbols.csv

      - name: Calculate features
        run: python ohlcv_calc.py symbols.csv

      - name: Prepare AI input
        run: python prepare_features.py symbols.csv

      - name: Analyze and Notify
        run: |
          # JST曜日取得 (1=月曜, 7=日曜)
          weekday_jst=$(TZ=Asia/Tokyo date +%u)

          for f in *_ai_input.json; do
            symbol=$(echo $f | sed 's/_ai_input.json//')
            type=$(grep $symbol symbols.csv | cut -d',' -f2)

            # FXはJST土日スキップ
            if [ "$type" = "forex" ] && [[ "$weekday_jst" -gt 5 ]]; then
              echo "Skipping $symbol (FX on weekend JST)"
              continue
            fi

            # 最新レート CSV を銘柄ごとに指定
            latest_rates_file="${symbol}_latest_rates.csv"
            if [ ! -f "$latest_rates_file" ]; then
              echo "Latest rates file not found: $latest_rates_file"
              continue
            fi

            # Discord通知スクリプト実行
            python notify_discord_all.py \
              --ai_input_file "$f" \
              --latest_rates_file "$latest_rates_file" \
              --symbol "$symbol" \
              --asset_type "$type" \
              --model gpt-5-mini
          done
